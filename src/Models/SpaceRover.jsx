/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useRef } from "react";
import { useGLTF } from "@react-three/drei";
import { useFrame } from "@react-three/fiber";

export default function SpaceRover(props) {
  const { nodes, materials } = useGLTF("/models/Rover.glb");

  const wheel1_ref = useRef();
  const wheel2_ref = useRef();
  const wheel3_ref = useRef();
  const wheel4_ref = useRef();

  useFrame(() => {
    if (wheel1_ref.current) {
      wheel1_ref.current.rotation.x += 0.005;
      wheel2_ref.current.rotation.x += 0.005;
      wheel3_ref.current.rotation.x += 0.005;
      wheel4_ref.current.rotation.x += 0.005;
    }
  });

  return (
    <group scale={0.37} {...props} dispose={null} position={[0, 0, 0]}>
      <mesh
        ref={wheel1_ref}
        castShadow
        receiveShadow
        geometry={nodes.Wheel_4001.geometry}
        material={materials.Atlas}
        position={[-1.796, 0.526, 1.897]}
        rotation={[-Math.PI / 2, 0, 0]}
        scale={100}
      />
      <mesh
        ref={wheel2_ref}
        castShadow
        receiveShadow
        geometry={nodes.Wheel_5.geometry}
        material={materials.Atlas}
        position={[1.796, 0.526, 1.897]}
        rotation={[-Math.PI / 2, 0, 0]}
        scale={100}
      />
      <mesh
        ref={wheel3_ref}
        castShadow
        receiveShadow
        geometry={nodes.Wheel_1002.geometry}
        material={materials.Atlas}
        position={[1.796, 0.526, -1.897]}
        rotation={[-Math.PI / 2, 0, 0]}
        scale={100}
      />
      <mesh
        ref={wheel4_ref}
        castShadow
        receiveShadow
        geometry={nodes.Wheel_4002.geometry}
        material={materials.Atlas}
        position={[-1.796, 0.526, -1.897]}
        rotation={[-Math.PI / 2, 0, 0]}
        scale={100}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Rover_1.geometry}
        material={materials.Atlas}
        rotation={[-Math.PI / 2, 0, 0]}
        scale={100}
      />
    </group>
  );
}

useGLTF.preload("/models/Rover.glb");
